---
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");

  const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  return tags.map((tag) => ({
    params: { tag },
    props: {
      posts: allPosts.filter((post) => post.data.tags.includes(tag)),
    },
  }));
}
type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
---

<BaseLayout pageTitle={tag}>
  <p>{tag}のタグが付いた記事</p>
  <ul>
    {
      posts.map((post) => (
        <BlogPost url={`/posts/${post.slug}`} title={post.data.title} />
      ))
    }
  </ul>
</BaseLayout>
